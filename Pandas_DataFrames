import pandas as pd

df2 = pd.DataFrame([
  [1, 'San Diego', 100],
  [2, 'Los Angeles', 120],
	[3, 'San Francisco', 90],
  [4, 'Sacramento', 115]
],
  columns=['Store ID', 'Location', 'Number of Employees'])

print df2

_________________________________________________________

import pandas as pd
df = pd.read_csv('sample.csv')
print(df)

_________________________________________________________

import pandas as pd

df = pd.read_csv('imdb.csv')

print(df.head())

print(df.info())

_________________________________________________________

import pandas as pd

df = pd.DataFrame([
  ['January', 100, 100, 23, 100],
  ['February', 51, 45, 145, 45],
  ['March', 81, 96, 65, 96],
  ['April', 80, 80, 54, 180],
  ['May', 51, 54, 54, 154],
  ['June', 112, 109, 79, 129]],
  columns=['month', 'clinic_east',
           'clinic_north', 'clinic_south',
           'clinic_west']
)

clinic_north = df.clinic_north

print(type(clinic_north))
print(type(df))

_________________________________________________________

#Selecting Multiple Columns
import pandas as pd

df = pd.DataFrame([
  ['January', 100, 100, 23, 100],
  ['February', 51, 45, 145, 45],
  ['March', 81, 96, 65, 96],
  ['April', 80, 80, 54, 180],
  ['May', 51, 54, 54, 154],
  ['June', 112, 109, 79, 129]],
  columns=['month', 'clinic_east',
           'clinic_north', 'clinic_south',
           'clinic_west']
)

clinic_north_south = df[['clinic_north', 'clinic_south']]

print(type(clinic_north_south))

_________________________________________________________

#Selecting Rows
import pandas as pd

df = pd.DataFrame([
  ['January', 100, 100, 23, 100],
  ['February', 51, 45, 145, 45],
  ['March', 81, 96, 65, 96],
  ['April', 80, 80, 54, 180],
  ['May', 51, 54, 54, 154],
  ['June', 112, 109, 79, 129]],
  columns=['month', 'clinic_east',
           'clinic_north', 'clinic_south',
           'clinic_west'])

march = df.loc[2]

_________________________________________________________

#Selecting Rows w/Logic
import pandas as pd

df = pd.DataFrame([
  ['January', 100, 100, 23, 100],
  ['February', 51, 45, 145, 45],
  ['March', 81, 96, 65, 96],
  ['April', 80, 80, 54, 180],
  ['May', 51, 54, 54, 154],
  ['June', 112, 109, 79, 129]],
  columns=['month', 'clinic_east',
           'clinic_north', 'clinic_south',
           'clinic_west'])

january = df[df.month == 'January']

print(january)

_________________________________________________________

#Selecting Rows w/Logic II
import pandas as pd

df = pd.DataFrame([
  ['January', 100, 100, 23, 100],
  ['February', 51, 45, 145, 45],
  ['March', 81, 96, 65, 96],
  ['April', 80, 80, 54, 180],
  ['May', 51, 54, 54, 154],
  ['June', 112, 109, 79, 129]],
  columns=['month', 'clinic_east',
           'clinic_north', 'clinic_south',
           'clinic_west'])
march_april = df[(df.month == 'March') |
                (df.month == 'April')]

print(march_april)

_________________________________________________________

#Selecting Rows w.Logic III
import pandas as pd

df = pd.DataFrame([
  ['January', 100, 100, 23, 100],
  ['February', 51, 45, 145, 45],
  ['March', 81, 96, 65, 96],
  ['April', 80, 80, 54, 180],
  ['May', 51, 54, 54, 154],
  ['June', 112, 109, 79, 129]],
  columns=['month', 'clinic_east',
           'clinic_north', 'clinic_south',
           'clinic_west'])
january_february_march = df[df.month.isin(['January', 'February', 'March'])]
print(january_february_march)

_________________________________________________________

#Setting Indices
import pandas as pd

df = pd.DataFrame([
  ['January', 100, 100, 23, 100],
  ['February', 51, 45, 145, 45],
  ['March', 81, 96, 65, 96],
  ['April', 80, 80, 54, 180],
  ['May', 51, 54, 54, 154],
  ['June', 112, 109, 79, 129]],
  columns=['month', 'clinic_east',
           'clinic_north', 'clinic_south',
           'clinic_west']
)

df2 = df.loc[[1, 3, 5]]
print(df2)
df3 = df2.reset_index(inplace=True, drop=True)
print(df3)

_________________________________________________________

#Review
import pandas as pd
orders = pd.read_csv('shoefly.csv')
print(orders.head())
emails = orders.email
frances_palmer = orders[orders.last_name == 'Palmer']
comfy_shoes = orders[(orders.shoe_type == 'clogs') |
                    (orders.shoe_type == 'boots') |
                    (orders.shoe_type == 'ballet flats')]

_________________________________________________________

import string

df['shoe_type'] = df.shoe_type.apply(string.lower)

df.head(10)

--

df['in_stock'] = df.shoe_material.apply(lambda x: False if x == 'fabric' else True)

df.head(10)

--

df['description'] = df.apply(lambda row: "{} {} bought {} {} {}"\
    .format(row.first_name,
            row.last_name,
            row.shoe_color,
            row.shoe_material,
            row.shoe_type),
    axis=1)
df.head(10)

_________________________________________________________

#Adding a Column I
import pandas as pd

df = pd.DataFrame([
  [1, '3 inch screw', 0.5, 0.75],
  [2, '2 inch nail', 0.10, 0.25],
  [3, 'hammer', 3.00, 5.50],
  [4, 'screwdriver', 2.50, 3.00]
],
  columns=['Product ID', 'Description', 'Cost to Manufacture', 'Price']
)

df['Sold in Bulk?']=['Yes', 'Yes', 'No', 'No']

print df

_________________________________________________________

#Adding a Column II
import pandas as pd

df = pd.DataFrame([
  [1, '3 inch screw', 0.5, 0.75],
  [2, '2 inch nail', 0.10, 0.25],
  [3, 'hammer', 3.00, 5.50],
  [4, 'screwdriver', 2.50, 3.00]
],
  columns=['Product ID', 'Description', 'Cost to Manufacture', 'Price']
)

df['Is taxed?'] = 'Yes'

print df

_________________________________________________________

#Adding a Column III
import pandas as pd

df = pd.DataFrame([
  [1, '3 inch screw', 0.5, 0.75],
  [2, '2 inch nail', 0.10, 0.25],
  [3, 'hammer', 3.00, 5.50],
  [4, 'screwdriver', 2.50, 3.00]
],
  columns=['Product ID', 'Description', 'Cost to Manufacture', 'Price']
)

df['Revenue'] = df.Price - df['Cost to Manufacture']

print df

_________________________________________________________

#Performing Column Operations
from string import lower
import pandas as pd

df = pd.DataFrame([
  ['JOHN SMITH', 'john.smith@gmail.com'],
  ['Jane Doe', 'jdoe@yahoo.com'],
  ['joe schmo', 'joeschmo@hotmail.com']
],
columns=['Name', 'Email'])

df['Lowercase Name'] = df.Name.apply(lower)

print df

_________________________________________________________

#Reviewing Lambda Function
#https://www.codecademy.com/articles/lambda-functions
import codecademylib
mylambda = lambda x: x[0]+x[len(x)-1]
print(mylambda('This is a string'))

_________________________________________________________

#Reviewing Lambda Function: If Statements
mylambda = lambda x: 'Welcome to BattleCity!' \
	if x >= 13 \
  else 'You must be over 13'

_________________________________________________________

#Applying a Lambda to a Column
#df['Email Provider'] = df.Email.apply(
    lambda x: x.split('@')[-1]
    )

import pandas as pd

df = pd.read_csv('employees.csv')

get_last_name = lambda x: x.split(' ')[-1]
df['last_name'] = df.name.apply(get_last_name)
print df

_________________________________________________________

#Applying a Lambda to a Row
import pandas as pd

df = pd.read_csv('employees.csv')

total_earned = lambda row: (row.hourly_wage * 40) + ((row.hourly_wage * 1.5) * (row.hours_worked - 40)) \
	if row.hours_worked > 40 \
  else row.hourly_wage * row.hours_worked
  
df['total_earned'] = df.apply(total_earned, axis = 1)

print df

_________________________________________________________

#Renaming Columns
import pandas as pd

df = pd.read_csv('imdb.csv')

df.columns = ['ID', 'Title', 'Category', 'Year Released', 'Rating']
print df

_________________________________________________________

#Renaming Columns II
import pandas as pd

df = pd.read_csv('imdb.csv')

df.rename(columns={
  'name': 'movie_title'},
         inplace=True)

print df

_________________________________________________________

#Review
import pandas as pd

orders = pd.read_csv('shoefly.csv')

print orders.head(5)

orders['shoe_source'] = orders.shoe_material.apply(lambda x: \
                        	'animal' if x == 'leather' else 'vegan')

orders['salutation'] = orders.apply(lambda row: \
                                    'Dear Mr. ' + row['last_name']
                                    if row['gender'] == 'male'
                                    else 'Dear Ms. ' + row['last_name'],
                                    axis=1)

_________________________________________________________



_________________________________________________________



_________________________________________________________



_________________________________________________________


